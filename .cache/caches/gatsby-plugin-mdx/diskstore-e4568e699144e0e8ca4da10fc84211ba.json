{"expireTime":9007200846725394000,"key":"gatsby-plugin-mdx-entire-payload-ced8bff904cb5bb59c111c858d9e26b2-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-page/node_modules/gatsby-theme-docz/src/base/Layout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":125,"offset":126},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":128},"end":{"line":5,"column":29,"offset":156},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Aligned Labels","position":{"start":{"line":8,"column":3,"offset":161},"end":{"line":8,"column":17,"offset":175},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":159},"end":{"line":8,"column":17,"offset":175},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Overview","position":{"start":{"line":10,"column":5,"offset":181},"end":{"line":10,"column":13,"offset":189},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":177},"end":{"line":10,"column":13,"offset":189},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Aligned Label is a Container used to align all controls to the maximum width of a set of labels.\n{% hint style=\"info\" %}\nIn Totalcross this component is called ","position":{"start":{"line":12,"column":1,"offset":191},"end":{"line":14,"column":40,"offset":351},"indent":[1,1]}},{"type":"strong","children":[{"type":"inlineCode","value":"AlignedLabelContainer","position":{"start":{"line":14,"column":42,"offset":353},"end":{"line":14,"column":65,"offset":376},"indent":[]}}],"position":{"start":{"line":14,"column":40,"offset":351},"end":{"line":14,"column":67,"offset":378},"indent":[]}},{"type":"text","value":".\n{% endhint %}","position":{"start":{"line":14,"column":67,"offset":378},"end":{"line":15,"column":14,"offset":393},"indent":[1]}}],"position":{"start":{"line":12,"column":1,"offset":191},"end":{"line":15,"column":14,"offset":393},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"./assets/alignedlabels-sample.gif.pagespeed.ce.d4badoy8p.gif","alt":"aligned label animation","position":{"start":{"line":17,"column":1,"offset":395},"end":{"line":17,"column":89,"offset":483},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":395},"end":{"line":17,"column":89,"offset":483},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Source Code","position":{"start":{"line":19,"column":5,"offset":489},"end":{"line":19,"column":16,"offset":500},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":485},"end":{"line":19,"column":16,"offset":500},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"{% code title=\"AlignedLabelsSample.java\" %}","position":{"start":{"line":21,"column":1,"offset":502},"end":{"line":21,"column":44,"offset":545},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":502},"end":{"line":21,"column":44,"offset":545},"indent":[]}},{"type":"code","lang":"java","meta":null,"value":"import totalcross.ui.AlignedLabelsContainer;\nimport totalcross.ui.Button;\nimport totalcross.ui.ComboBox;\nimport totalcross.ui.Edit;\nimport totalcross.ui.Label;\nimport totalcross.ui.ListBox;\nimport totalcross.ui.ScrollContainer;\nimport totalcross.util.UnitsConverter;\n\npublic class extends ScrollContainer {\n\tprivate int gap = UnitsConverter.toPixels(10 + DP);\n\tprivate boolean canInsert = true;\n\tprivate ListBox lb;\n\tprivate Label output;\n\n\t@Override\n\tpublic void initUI() {\n\t\tuiAdjustmentsBasedOnFontHeightIsSupported = false;\n\t\tsetBackForeColors(0xF7F7F7, 0x000000);\n\t\tsetScrollBars(false, true);\n\n\t\tString[] labels = { \"Name\", \"Born date\", \"Telephone\", \"Address\", \"City\", \"Country\" };\n\t\tEdit edits[] = new Edit[5];\n\t\tedits[0].transparentBackground = true;\n\t\tEdit.useNativeNumericPad = true;\n\n\t\tfor (int i = 0; i < edits.length; i++) {\n\t\t\tswitch (i) {\n\t\t\tcase 1:\n\t\t\t\tedits[i] = new Edit(\"99/99/9999\");\n\t\t\t\tedits[i].setMode(Edit.NORMAL, true);\n\t\t\t\tedits[i].setValidChars(Edit.numbersSet);\n\t\t\t\tedits[i].setKeyboard(Edit.KBD_NUMERIC);\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tedits[i] = new Edit(\"(99)9999-99999\");\n\t\t\t\tedits[i].setMode(Edit.NORMAL, true);\n\t\t\t\tedits[i].setValidChars(Edit.numbersSet);\n\t\t\t\tedits[i].setKeyboard(Edit.KBD_NUMERIC);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tedits[i] = new Edit();\n\t\t\t}\n\t\t}\n\n\t\tLabel title = new Label(\"This is an AlignedLabelsContainer.\\nAll the content will be automatically aligned.\",\n\t\t\t\tCENTER, 0, true);\n\t\ttitle.autoSplit = true;\n\t\tadd(title, LEFT + gap, TOP + gap, FILL - gap, PREFERRED);\n\n\t\tAlignedLabelsContainer alc = new AlignedLabelsContainer();\n\t\talc.uiAdjustmentsBasedOnFontHeightIsSupported = false;\n\t\talc.labelAlign = RIGHT;\n\n\t\talc.setInsets(gap, gap, 0, 0);\n\t\talc.setLabels(labels, edits[0].getPreferredHeight());\n\t\tadd(alc, LEFT, AFTER, FILL, PREFERRED);\n\t\tint i;\n\t\tfor (i = 0; i < edits.length - 1; i++) {\n\t\t\talc.add(edits[i], LEFT + gap, alc.getLineY(i), FILL - gap, PREFERRED);\n\t\t}\n\n\t\tButton btnInsert = new Button(\"Insert data\", (byte) 0);\n\t\tbtnInsert.setBackForeColors(0x4583d4, 0xFFFFFF);\n\t\talc.add(edits[edits.length - 1], LEFT + gap, alc.getLineY(i), edits[3].getWidth() / 2 - gap / 2, PREFERRED);\n\t\talc.add(btnInsert, RIGHT - gap, CENTER_OF, SAME, PREFERRED, edits[edits.length - 1]);\n\n\t\tComboBox cbCountry = new ComboBox(new String[] { \"Brazil\", \"USA\" });\n\t\talc.add(cbCountry, LEFT + gap, alc.getLineY(++i), SAME, PREFERRED, edits[edits.length - 1]);\n\n\t\tButton btnClear = new Button(\"CLEAR DATA\", (byte) 0);\n\t\talc.add(btnClear, RIGHT - gap, CENTER_OF, SAME, PREFERRED);\n\n\t\tbtnInsert.addPressListener(e -> {\n\t\t\tif (canInsert) {\n\t\t\t\tlb = new ListBox();\n\t\t\t\tfor (int j = 0; j < edits.length; j++)\n\t\t\t\t\tlb.add(labels[j] + \": \" + edits[j].getText());\n\t\t\t\tif (cbCountry.getSelectedIndex() != -1)\n\t\t\t\t\tlb.add(\"Country: \" + cbCountry.getSelectedItem());\n\t\t\t\telse\n\t\t\t\t\tlb.add(\"Country: \");\n\n\t\t\t\toutput = new Label(\"OUTPUT:\");\n\t\t\t\toutput.setFont(font.asBold());\n\t\t\t\tadd(output, CENTER, AFTER);\n\t\t\t\tadd(lb, CENTER, AFTER + gap, SCREENSIZE + 80, PREFERRED);\n\t\t\t\tcanInsert = false;\n\n\t\t\t\tscrollToControl(lb);\n\t\t\t} else {\n\t\t\t\tlb.removeAll();\n\t\t\t\tfor (int j = 0; j < edits.length; j++)\n\t\t\t\t\tlb.add(labels[j] + \": \" + edits[j].getText());\n\t\t\t\tif (cbCountry.getSelectedIndex() != -1)\n\t\t\t\t\tlb.add(\"Country: \" + cbCountry.getSelectedItem());\n\t\t\t\telse\n\t\t\t\t\tlb.add(\"Country: \");\n\t\t\t}\n\t\t\t// reposition(); reposition bugando o edit\n\t\t});\n\n\t\tbtnClear.addPressListener(e -> {\n\n\t\t\t// Cleaning the labels' content\n\t\t\tfor (Edit edit : edits)\n\t\t\t\tedit.clear();\n\t\t\tcbCountry.setSelectedIndex(-1);\n\t\t\tif (!canInsert) {\n\t\t\t\t// Cleaning the output\n\t\t\t\tremove(lb);\n\t\t\t\tremove(output);\n\t\t\t\tcanInsert = true;\n\t\t\t}\n\t\t});\n\t}\n}","position":{"start":{"line":23,"column":1,"offset":547},"end":{"line":141,"column":4,"offset":4187},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"{% endcode %}","position":{"start":{"line":143,"column":1,"offset":4189},"end":{"line":143,"column":14,"offset":4202},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4189},"end":{"line":143,"column":14,"offset":4202},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Attributes","position":{"start":{"line":145,"column":5,"offset":4208},"end":{"line":145,"column":15,"offset":4218},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4204},"end":{"line":145,"column":15,"offset":4218},"indent":[]}},{"type":"table","align":["left","left","left"],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"Type","position":{"start":{"line":147,"column":3,"offset":4222},"end":{"line":147,"column":7,"offset":4226},"indent":[]}}],"position":{"start":{"line":147,"column":3,"offset":4222},"end":{"line":147,"column":15,"offset":4234},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Name","position":{"start":{"line":147,"column":18,"offset":4237},"end":{"line":147,"column":22,"offset":4241},"indent":[]}}],"position":{"start":{"line":147,"column":18,"offset":4237},"end":{"line":147,"column":30,"offset":4249},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":147,"column":33,"offset":4252},"end":{"line":147,"column":44,"offset":4263},"indent":[]}}],"position":{"start":{"line":147,"column":33,"offset":4252},"end":{"line":147,"column":125,"offset":4344},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4220},"end":{"line":147,"column":127,"offset":4346},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"Font","position":{"start":{"line":149,"column":5,"offset":4478},"end":{"line":149,"column":9,"offset":4482},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":4476},"end":{"line":149,"column":11,"offset":4484},"indent":[]}}],"position":{"start":{"line":149,"column":3,"offset":4476},"end":{"line":149,"column":15,"offset":4488},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"childrenFont","position":{"start":{"line":149,"column":18,"offset":4491},"end":{"line":149,"column":30,"offset":4503},"indent":[]}}],"position":{"start":{"line":149,"column":18,"offset":4491},"end":{"line":149,"column":30,"offset":4503},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Set this member to the font you want to set to the controls that are added to this container","position":{"start":{"line":149,"column":33,"offset":4506},"end":{"line":149,"column":125,"offset":4598},"indent":[]}}],"position":{"start":{"line":149,"column":33,"offset":4506},"end":{"line":149,"column":125,"offset":4598},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":4474},"end":{"line":149,"column":127,"offset":4600},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"int","position":{"start":{"line":150,"column":5,"offset":4605},"end":{"line":150,"column":8,"offset":4608},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":150,"column":8,"offset":4608},"end":{"line":150,"column":10,"offset":4610},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":150,"column":10,"offset":4610},"end":{"line":150,"column":11,"offset":4611},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":150,"column":11,"offset":4611},"end":{"line":150,"column":13,"offset":4613},"indent":[]}}],"position":{"start":{"line":150,"column":3,"offset":4603},"end":{"line":150,"column":15,"offset":4615},"indent":[]}}],"position":{"start":{"line":150,"column":3,"offset":4603},"end":{"line":150,"column":15,"offset":4615},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"foreColors","position":{"start":{"line":150,"column":18,"offset":4618},"end":{"line":150,"column":28,"offset":4628},"indent":[]}}],"position":{"start":{"line":150,"column":18,"offset":4618},"end":{"line":150,"column":30,"offset":4630},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Sets an array with the same number of labels and the colors you want to show for each label","position":{"start":{"line":150,"column":33,"offset":4633},"end":{"line":150,"column":124,"offset":4724},"indent":[]}}],"position":{"start":{"line":150,"column":33,"offset":4633},"end":{"line":150,"column":125,"offset":4725},"indent":[]}}],"position":{"start":{"line":150,"column":1,"offset":4601},"end":{"line":150,"column":127,"offset":4727},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"int","position":{"start":{"line":151,"column":5,"offset":4732},"end":{"line":151,"column":8,"offset":4735},"indent":[]}}],"position":{"start":{"line":151,"column":3,"offset":4730},"end":{"line":151,"column":10,"offset":4737},"indent":[]}}],"position":{"start":{"line":151,"column":3,"offset":4730},"end":{"line":151,"column":15,"offset":4742},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"labelAlign","position":{"start":{"line":151,"column":18,"offset":4745},"end":{"line":151,"column":28,"offset":4755},"indent":[]}}],"position":{"start":{"line":151,"column":18,"offset":4745},"end":{"line":151,"column":30,"offset":4757},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"The alignment of the labels","position":{"start":{"line":151,"column":33,"offset":4760},"end":{"line":151,"column":60,"offset":4787},"indent":[]}}],"position":{"start":{"line":151,"column":33,"offset":4760},"end":{"line":151,"column":125,"offset":4852},"indent":[]}}],"position":{"start":{"line":151,"column":1,"offset":4728},"end":{"line":151,"column":127,"offset":4854},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4220},"end":{"line":151,"column":127,"offset":4854},"indent":[1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Methods","position":{"start":{"line":153,"column":5,"offset":4860},"end":{"line":153,"column":12,"offset":4867},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":4856},"end":{"line":153,"column":12,"offset":4867},"indent":[]}},{"type":"table","align":["left","left","left"],"children":[{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"text","value":"ype","position":{"start":{"line":155,"column":3,"offset":4871},"end":{"line":155,"column":6,"offset":4874},"indent":[]}}],"position":{"start":{"line":155,"column":3,"offset":4871},"end":{"line":155,"column":17,"offset":4885},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Name","position":{"start":{"line":155,"column":20,"offset":4888},"end":{"line":155,"column":24,"offset":4892},"indent":[]}}],"position":{"start":{"line":155,"column":20,"offset":4888},"end":{"line":155,"column":73,"offset":4941},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Description","position":{"start":{"line":155,"column":76,"offset":4944},"end":{"line":155,"column":87,"offset":4955},"indent":[]}}],"position":{"start":{"line":155,"column":76,"offset":4944},"end":{"line":155,"column":172,"offset":5040},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4869},"end":{"line":155,"column":174,"offset":5042},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"Construtor","position":{"start":{"line":157,"column":5,"offset":5221},"end":{"line":157,"column":15,"offset":5231},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":5219},"end":{"line":157,"column":17,"offset":5233},"indent":[]}}],"position":{"start":{"line":157,"column":3,"offset":5219},"end":{"line":157,"column":17,"offset":5233},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"AlignedLabelsContainer","position":{"start":{"line":157,"column":20,"offset":5236},"end":{"line":157,"column":42,"offset":5258},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":157,"column":42,"offset":5258},"end":{"line":157,"column":44,"offset":5260},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":157,"column":44,"offset":5260},"end":{"line":157,"column":45,"offset":5261},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":157,"column":45,"offset":5261},"end":{"line":157,"column":47,"offset":5263},"indent":[]}}],"position":{"start":{"line":157,"column":20,"offset":5236},"end":{"line":157,"column":73,"offset":5289},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Creates a new AlignedLabelsContainer without labels","position":{"start":{"line":157,"column":76,"offset":5292},"end":{"line":157,"column":127,"offset":5343},"indent":[]}}],"position":{"start":{"line":157,"column":76,"offset":5292},"end":{"line":157,"column":172,"offset":5388},"indent":[]}}],"position":{"start":{"line":157,"column":1,"offset":5217},"end":{"line":157,"column":174,"offset":5390},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"Construtor","position":{"start":{"line":158,"column":5,"offset":5395},"end":{"line":158,"column":15,"offset":5405},"indent":[]}}],"position":{"start":{"line":158,"column":3,"offset":5393},"end":{"line":158,"column":17,"offset":5407},"indent":[]}}],"position":{"start":{"line":158,"column":3,"offset":5393},"end":{"line":158,"column":17,"offset":5407},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"AlignedLabelsContainer","position":{"start":{"line":158,"column":20,"offset":5410},"end":{"line":158,"column":42,"offset":5432},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":158,"column":42,"offset":5432},"end":{"line":158,"column":44,"offset":5434},"indent":[]}},{"type":"text","value":"String","position":{"start":{"line":158,"column":44,"offset":5434},"end":{"line":158,"column":50,"offset":5440},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":158,"column":50,"offset":5440},"end":{"line":158,"column":52,"offset":5442},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":158,"column":52,"offset":5442},"end":{"line":158,"column":54,"offset":5444},"indent":[]}},{"type":"text","value":" labels","position":{"start":{"line":158,"column":54,"offset":5444},"end":{"line":158,"column":61,"offset":5451},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":158,"column":61,"offset":5451},"end":{"line":158,"column":63,"offset":5453},"indent":[]}}],"position":{"start":{"line":158,"column":20,"offset":5410},"end":{"line":158,"column":73,"offset":5463},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Creates a new AlignedLabelsContainer with the given labels","position":{"start":{"line":158,"column":76,"offset":5466},"end":{"line":158,"column":134,"offset":5524},"indent":[]}}],"position":{"start":{"line":158,"column":76,"offset":5466},"end":{"line":158,"column":172,"offset":5562},"indent":[]}}],"position":{"start":{"line":158,"column":1,"offset":5391},"end":{"line":158,"column":174,"offset":5564},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"Construtor","position":{"start":{"line":159,"column":5,"offset":5569},"end":{"line":159,"column":15,"offset":5579},"indent":[]}}],"position":{"start":{"line":159,"column":3,"offset":5567},"end":{"line":159,"column":17,"offset":5581},"indent":[]}}],"position":{"start":{"line":159,"column":3,"offset":5567},"end":{"line":159,"column":17,"offset":5581},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"AlignedLabelsContainer","position":{"start":{"line":159,"column":20,"offset":5584},"end":{"line":159,"column":42,"offset":5606},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":159,"column":42,"offset":5606},"end":{"line":159,"column":44,"offset":5608},"indent":[]}},{"type":"text","value":"String","position":{"start":{"line":159,"column":44,"offset":5608},"end":{"line":159,"column":50,"offset":5614},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":159,"column":50,"offset":5614},"end":{"line":159,"column":52,"offset":5616},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":159,"column":52,"offset":5616},"end":{"line":159,"column":54,"offset":5618},"indent":[]}},{"type":"text","value":" labels, int vgap","position":{"start":{"line":159,"column":54,"offset":5618},"end":{"line":159,"column":71,"offset":5635},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":159,"column":71,"offset":5635},"end":{"line":159,"column":73,"offset":5637},"indent":[]}}],"position":{"start":{"line":159,"column":20,"offset":5584},"end":{"line":159,"column":73,"offset":5637},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Creates a new AlignedLabelsContainer with the given labels and a vertical gap between the labels","position":{"start":{"line":159,"column":76,"offset":5640},"end":{"line":159,"column":172,"offset":5736},"indent":[]}}],"position":{"start":{"line":159,"column":76,"offset":5640},"end":{"line":159,"column":172,"offset":5736},"indent":[]}}],"position":{"start":{"line":159,"column":1,"offset":5565},"end":{"line":159,"column":174,"offset":5738},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"void","position":{"start":{"line":160,"column":5,"offset":5743},"end":{"line":160,"column":9,"offset":5747},"indent":[]}}],"position":{"start":{"line":160,"column":3,"offset":5741},"end":{"line":160,"column":11,"offset":5749},"indent":[]}}],"position":{"start":{"line":160,"column":3,"offset":5741},"end":{"line":160,"column":17,"offset":5755},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"add","position":{"start":{"line":160,"column":20,"offset":5758},"end":{"line":160,"column":23,"offset":5761},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":160,"column":23,"offset":5761},"end":{"line":160,"column":25,"offset":5763},"indent":[]}},{"type":"text","value":"Control c","position":{"start":{"line":160,"column":25,"offset":5763},"end":{"line":160,"column":34,"offset":5772},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":160,"column":34,"offset":5772},"end":{"line":160,"column":36,"offset":5774},"indent":[]}}],"position":{"start":{"line":160,"column":20,"offset":5758},"end":{"line":160,"column":73,"offset":5811},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Since this is an AlignedLabelsContainer, use this to add a label","position":{"start":{"line":160,"column":76,"offset":5814},"end":{"line":160,"column":140,"offset":5878},"indent":[]}}],"position":{"start":{"line":160,"column":76,"offset":5814},"end":{"line":160,"column":172,"offset":5910},"indent":[]}}],"position":{"start":{"line":160,"column":1,"offset":5739},"end":{"line":160,"column":174,"offset":5912},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"int","position":{"start":{"line":161,"column":5,"offset":5917},"end":{"line":161,"column":8,"offset":5920},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":5915},"end":{"line":161,"column":10,"offset":5922},"indent":[]}}],"position":{"start":{"line":161,"column":3,"offset":5915},"end":{"line":161,"column":17,"offset":5929},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"getLineY","position":{"start":{"line":161,"column":20,"offset":5932},"end":{"line":161,"column":28,"offset":5940},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":161,"column":28,"offset":5940},"end":{"line":161,"column":30,"offset":5942},"indent":[]}},{"type":"text","value":"int line","position":{"start":{"line":161,"column":30,"offset":5942},"end":{"line":161,"column":38,"offset":5950},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":161,"column":38,"offset":5950},"end":{"line":161,"column":40,"offset":5952},"indent":[]}}],"position":{"start":{"line":161,"column":20,"offset":5932},"end":{"line":161,"column":73,"offset":5985},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Given a line ","position":{"start":{"line":161,"column":76,"offset":5988},"end":{"line":161,"column":89,"offset":6001},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":161,"column":89,"offset":6001},"end":{"line":161,"column":91,"offset":6003},"indent":[]}},{"type":"text","value":"staring from 0","position":{"start":{"line":161,"column":91,"offset":6003},"end":{"line":161,"column":105,"offset":6017},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":161,"column":105,"offset":6017},"end":{"line":161,"column":107,"offset":6019},"indent":[]}},{"type":"text","value":", returns the y position","position":{"start":{"line":161,"column":107,"offset":6019},"end":{"line":161,"column":131,"offset":6043},"indent":[]}}],"position":{"start":{"line":161,"column":76,"offset":5988},"end":{"line":161,"column":172,"offset":6084},"indent":[]}}],"position":{"start":{"line":161,"column":1,"offset":5913},"end":{"line":161,"column":174,"offset":6086},"indent":[]}},{"type":"tableRow","children":[{"type":"tableCell","children":[{"type":"strong","children":[{"type":"text","value":"void","position":{"start":{"line":162,"column":5,"offset":6091},"end":{"line":162,"column":9,"offset":6095},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":6089},"end":{"line":162,"column":11,"offset":6097},"indent":[]}}],"position":{"start":{"line":162,"column":3,"offset":6089},"end":{"line":162,"column":17,"offset":6103},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"setLabels","position":{"start":{"line":162,"column":20,"offset":6106},"end":{"line":162,"column":29,"offset":6115},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":162,"column":29,"offset":6115},"end":{"line":162,"column":31,"offset":6117},"indent":[]}},{"type":"text","value":"String","position":{"start":{"line":162,"column":31,"offset":6117},"end":{"line":162,"column":37,"offset":6123},"indent":[]}},{"type":"text","value":"[","position":{"start":{"line":162,"column":37,"offset":6123},"end":{"line":162,"column":39,"offset":6125},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":162,"column":39,"offset":6125},"end":{"line":162,"column":40,"offset":6126},"indent":[]}},{"type":"text","value":"]","position":{"start":{"line":162,"column":40,"offset":6126},"end":{"line":162,"column":42,"offset":6128},"indent":[]}},{"type":"text","value":" labels, int vgap","position":{"start":{"line":162,"column":42,"offset":6128},"end":{"line":162,"column":59,"offset":6145},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":162,"column":59,"offset":6145},"end":{"line":162,"column":61,"offset":6147},"indent":[]}}],"position":{"start":{"line":162,"column":20,"offset":6106},"end":{"line":162,"column":73,"offset":6159},"indent":[]}},{"type":"tableCell","children":[{"type":"text","value":"Sets the labels and the extra gap between rows ","position":{"start":{"line":162,"column":76,"offset":6162},"end":{"line":162,"column":123,"offset":6209},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":162,"column":123,"offset":6209},"end":{"line":162,"column":125,"offset":6211},"indent":[]}},{"type":"text","value":"which may be 0","position":{"start":{"line":162,"column":125,"offset":6211},"end":{"line":162,"column":139,"offset":6225},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":162,"column":139,"offset":6225},"end":{"line":162,"column":141,"offset":6227},"indent":[]}}],"position":{"start":{"line":162,"column":76,"offset":6162},"end":{"line":162,"column":172,"offset":6258},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":6087},"end":{"line":162,"column":174,"offset":6260},"indent":[]}}],"position":{"start":{"line":155,"column":1,"offset":4869},"end":{"line":162,"column":174,"offset":6260},"indent":[1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":165,"column":1,"offset":6263},"end":{"line":165,"column":31,"offset":6293},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":165,"column":31,"offset":6293}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-page/node_modules/gatsby-theme-docz/src/base/Layout.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"aligned-labels\"\n    }}>{`Aligned Labels`}</h1>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`Aligned Label is a Container used to align all controls to the maximum width of a set of labels.\n{% hint style=\"info\" %}\nIn Totalcross this component is called `}<strong parentName=\"p\"><inlineCode parentName=\"strong\">{`AlignedLabelContainer`}</inlineCode></strong>{`.\n{% endhint %}`}</p>\n    <p><img alt=\"aligned label animation\" src={require(\"./assets/alignedlabels-sample.gif.pagespeed.ce.d4badoy8p.gif\")} /></p>\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`Source Code`}</h3>\n    <p>{`{% code title=\"AlignedLabelsSample.java\" %}`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import totalcross.ui.AlignedLabelsContainer;\nimport totalcross.ui.Button;\nimport totalcross.ui.ComboBox;\nimport totalcross.ui.Edit;\nimport totalcross.ui.Label;\nimport totalcross.ui.ListBox;\nimport totalcross.ui.ScrollContainer;\nimport totalcross.util.UnitsConverter;\n\npublic class extends ScrollContainer {\n    private int gap = UnitsConverter.toPixels(10 + DP);\n    private boolean canInsert = true;\n    private ListBox lb;\n    private Label output;\n\n    @Override\n    public void initUI() {\n        uiAdjustmentsBasedOnFontHeightIsSupported = false;\n        setBackForeColors(0xF7F7F7, 0x000000);\n        setScrollBars(false, true);\n\n        String[] labels = { \"Name\", \"Born date\", \"Telephone\", \"Address\", \"City\", \"Country\" };\n        Edit edits[] = new Edit[5];\n        edits[0].transparentBackground = true;\n        Edit.useNativeNumericPad = true;\n\n        for (int i = 0; i < edits.length; i++) {\n            switch (i) {\n            case 1:\n                edits[i] = new Edit(\"99/99/9999\");\n                edits[i].setMode(Edit.NORMAL, true);\n                edits[i].setValidChars(Edit.numbersSet);\n                edits[i].setKeyboard(Edit.KBD_NUMERIC);\n                break;\n            case 2:\n                edits[i] = new Edit(\"(99)9999-99999\");\n                edits[i].setMode(Edit.NORMAL, true);\n                edits[i].setValidChars(Edit.numbersSet);\n                edits[i].setKeyboard(Edit.KBD_NUMERIC);\n                break;\n            default:\n                edits[i] = new Edit();\n            }\n        }\n\n        Label title = new Label(\"This is an AlignedLabelsContainer.\\\\nAll the content will be automatically aligned.\",\n                CENTER, 0, true);\n        title.autoSplit = true;\n        add(title, LEFT + gap, TOP + gap, FILL - gap, PREFERRED);\n\n        AlignedLabelsContainer alc = new AlignedLabelsContainer();\n        alc.uiAdjustmentsBasedOnFontHeightIsSupported = false;\n        alc.labelAlign = RIGHT;\n\n        alc.setInsets(gap, gap, 0, 0);\n        alc.setLabels(labels, edits[0].getPreferredHeight());\n        add(alc, LEFT, AFTER, FILL, PREFERRED);\n        int i;\n        for (i = 0; i < edits.length - 1; i++) {\n            alc.add(edits[i], LEFT + gap, alc.getLineY(i), FILL - gap, PREFERRED);\n        }\n\n        Button btnInsert = new Button(\"Insert data\", (byte) 0);\n        btnInsert.setBackForeColors(0x4583d4, 0xFFFFFF);\n        alc.add(edits[edits.length - 1], LEFT + gap, alc.getLineY(i), edits[3].getWidth() / 2 - gap / 2, PREFERRED);\n        alc.add(btnInsert, RIGHT - gap, CENTER_OF, SAME, PREFERRED, edits[edits.length - 1]);\n\n        ComboBox cbCountry = new ComboBox(new String[] { \"Brazil\", \"USA\" });\n        alc.add(cbCountry, LEFT + gap, alc.getLineY(++i), SAME, PREFERRED, edits[edits.length - 1]);\n\n        Button btnClear = new Button(\"CLEAR DATA\", (byte) 0);\n        alc.add(btnClear, RIGHT - gap, CENTER_OF, SAME, PREFERRED);\n\n        btnInsert.addPressListener(e -> {\n            if (canInsert) {\n                lb = new ListBox();\n                for (int j = 0; j < edits.length; j++)\n                    lb.add(labels[j] + \": \" + edits[j].getText());\n                if (cbCountry.getSelectedIndex() != -1)\n                    lb.add(\"Country: \" + cbCountry.getSelectedItem());\n                else\n                    lb.add(\"Country: \");\n\n                output = new Label(\"OUTPUT:\");\n                output.setFont(font.asBold());\n                add(output, CENTER, AFTER);\n                add(lb, CENTER, AFTER + gap, SCREENSIZE + 80, PREFERRED);\n                canInsert = false;\n\n                scrollToControl(lb);\n            } else {\n                lb.removeAll();\n                for (int j = 0; j < edits.length; j++)\n                    lb.add(labels[j] + \": \" + edits[j].getText());\n                if (cbCountry.getSelectedIndex() != -1)\n                    lb.add(\"Country: \" + cbCountry.getSelectedItem());\n                else\n                    lb.add(\"Country: \");\n            }\n            // reposition(); reposition bugando o edit\n        });\n\n        btnClear.addPressListener(e -> {\n\n            // Cleaning the labels' content\n            for (Edit edit : edits)\n                edit.clear();\n            cbCountry.setSelectedIndex(-1);\n            if (!canInsert) {\n                // Cleaning the output\n                remove(lb);\n                remove(output);\n                canInsert = true;\n            }\n        });\n    }\n}\n`}</code></pre>\n    <p>{`{% endcode %}`}</p>\n    <h3 {...{\n      \"id\": \"attributes\"\n    }}>{`Attributes`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Font`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`childrenFont`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set this member to the font you want to set to the controls that are added to this container`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}{`[`}{` `}{`]`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`foreColors`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets an array with the same number of labels and the colors you want to show for each label`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`labelAlign`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The alignment of the labels`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`ype`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Construtor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`AlignedLabelsContainer`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a new AlignedLabelsContainer without labels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Construtor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`AlignedLabelsContainer`}{`(`}{`String`}{`[`}{`]`}{` labels`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a new AlignedLabelsContainer with the given labels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Construtor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`AlignedLabelsContainer`}{`(`}{`String`}{`[`}{`]`}{` labels, int vgap`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a new AlignedLabelsContainer with the given labels and a vertical gap between the labels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`add`}{`(`}{`Control c`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Since this is an AlignedLabelsContainer, use this to add a label`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getLineY`}{`(`}{`int line`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Given a line `}{`(`}{`staring from 0`}{`)`}{`, returns the y position`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setLabels`}{`(`}{`String`}{`[`}{` `}{`]`}{` labels, int vgap`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the labels and the extra gap between rows `}{`(`}{`which may be 0`}{`)`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}